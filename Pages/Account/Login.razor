@page "/account/login"
@inject IAccountService AccountService
@inject IAlertService AlertService
@inject NavigationManager NavigationManager

<style>  

    .header{
        display:fixed;
        top:10px;
        left:10px
    }

    h1.welcome{
        margin-top:100px;
        text-align:center;
        font-weight:bold
    }

    p.welcome{
        margin-top:10px;
            text-align:center;
    }

</style>

<small class="header">ZZSRH - Baza gljivara </small>


<h1 class="welcome">Dobrodošli</h1>

<p class="welcome">
    Ovo su stranice Baze podataka gljivara Republike Hrvatske.<br/>
    Upis je u potpunosti besplatan i nisu potrebni osobni dokumenti.
    <br/>
    Baza gljivara je projekt Hrvatskog zavoda za statistiku i provodi se u svrhu mapiranja izvora neindustrijski proizvedene hrane.
    <br/> 
    Projekt je sponzoriran sredstvima EU.
    <br/>
    <br/>
    <NavLink href="account/register" class="btn btn-link">Registracija</NavLink>
    <br/>
    <br/>
    Ukoliko ste već registrirani i želite promjeniti svoje podatke mozete to učiniti ovdje 
    <br/>
    <br/>
    <button class="btn btn-primary" onclick="document.querySelector('#login').style.display='block';document.querySelector('.username').focus()">Pristup</button>

</p>








<div class="card" id="login" style="display:none">
    <h4 class="card-header">Pristup</h4>
    <div class="card-body">
        <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label>Korisničko ime</label>
                <InputText @bind-Value="model.Username" class="form-control username" />
                <ValidationMessage For="@(() => model.Username)" />
            </div>
            <div class="form-group">
                <label>Lozinka</label>
                <InputText @bind-Value="model.Password" type="password" class="form-control" />
                <ValidationMessage For="@(() => model.Password)" />
            </div>
            <button disabled="@loading" class="btn btn-primary">
                @if (loading)
                {
                    <span class="spinner-border spinner-border-sm mr-1"></span>
                }
                Pristup
            </button>
            <NavLink href="account/register" class="btn btn-link">Registriraj</NavLink>
        </EditForm>
    </div>
</div>

@code {
    private BazaGljivara.Client.Models.Accounts.Login model = new BazaGljivara.Client.Models.Accounts.Login();
    private bool loading;

    private async void OnValidSubmit()
    {
        // reset alerts on submit
        AlertService.Clear();

        loading = true;
        try
        {
            await AccountService.Login(model);
            var returnUrl = NavigationManager.QueryString("returnUrl") ?? "";
            NavigationManager.NavigateTo(returnUrl);
        }
        catch (Exception ex)
        {
            AlertService.Error(ex.Message);
            loading = false;
            StateHasChanged();
        }
    }
}