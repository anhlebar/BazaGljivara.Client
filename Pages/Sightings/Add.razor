@page "/sightings/add"
@inject ILocationsService LocationsService
@inject IAlertService AlertService
@inject NavigationManager NavigationManager

<div class="card">
    <h4 class="card-header">Registracija nove lokacije Smrčka</h4>
    <div class="card-body">
        <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label>

                     Nad. širina (Lat)
                     

                </label>
                <InputText @bind-Value="model.Lat" class="form-control" />
                <ValidationMessage For="@(() => model.Lat)" />
            </div>
            <div class="form-group">
                <label> 
                    Nad. visina (Lng) 
                    
                </label>
                <InputText @bind-Value="model.Lng" class="form-control" />
                <ValidationMessage For="@(() => model.Lng)" />
            </div>
          
            <button disabled="@loading" class="btn btn-primary">
                Unesi
            </button>
            <NavLink href="sightings" class="btn btn-link">Odustani</NavLink>
        </EditForm>
    </div>
</div>

@code {
    private AddLocation model = new AddLocation();
    private bool loading;

    private async void OnValidSubmit()
    {
        // reset alerts on submit
        AlertService.Clear();

        loading = true;
        try
        {
            await LocationsService.Register(model);
            AlertService.Success("Unos lokacije uspješan", keepAfterRouteChange: true);
            NavigationManager.NavigateTo("sightings");
        }
        catch (Exception ex)
        {
            AlertService.Error(ex.Message);
            loading = false;
            StateHasChanged();
        }
    }
}